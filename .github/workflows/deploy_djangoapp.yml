name: Deploy Django App to Azure VM

on:
  workflow_dispatch:
    inputs:
      create_linux:
        description: "Create Linux VM"
        required: true
        default: "true"
      resource_group_n:
        description: "Azure Resource Group Name"
        required: true
        default: "quizzapp-vm-rg"
      location_n:
        description: "Azure Region"
        required: true
        default: "centralindia"

jobs:
  deploy:
    name: Deploy to Azure VM
    runs-on: ubuntu-latest

    steps:
    - name: 🧾 Checkout code
      uses: actions/checkout@v3

    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 🔧 Set Environment Variables
      run: |
        echo "RESOURCE_GROUP=${{ github.event.inputs.resource_group_n }}" >> $GITHUB_ENV
        echo "LOCATION=${{ github.event.inputs.location_n }}" >> $GITHUB_ENV
        echo "VM_USER=azureuser" >> $GITHUB_ENV
        echo "LINUX_VM_NAME=linux-gh-vm" >> $GITHUB_ENV

    - name: 🔑 Generate SSH Key Pair
      run: |
        mkdir -p ~/.ssh
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/quizapp_key -N ""
        echo "PRIVATE_KEY<<EOF" >> $GITHUB_ENV
        cat ~/.ssh/quizapp_key >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "PUBLIC_KEY=$(cat ~/.ssh/quizapp_key.pub)" >> $GITHUB_ENV

    - name: 📦 Upload SSH Keys as Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: ssh-keys
        path: |
          ~/.ssh/quizapp_key
          ~/.ssh/quizapp_key.pub


    - name: 🏗️ Create Resource Group
      run: |
        az group create --name $RESOURCE_GROUP --location $LOCATION

    - name: 🖥️ Deploy Linux VM
      if: ${{ github.event.inputs.create_linux == 'true' }}
      run: |
        az vm create \
          --resource-group $RESOURCE_GROUP \
          --name $LINUX_VM_NAME \
          --image Canonical:0001-com-ubuntu-server-jammy:22_04-lts-gen2:latest \
          --admin-username $VM_USER \
          --authentication-type ssh \
          --ssh-key-value "$PUBLIC_KEY" \
          --size Standard_B2s \
          --location $LOCATION \
          --output none

    - name: 🌍 Get Public IP of VM
      id: get_ip
      run: |
        VM_IP=$(az vm show -d -g $RESOURCE_GROUP -n $LINUX_VM_NAME --query publicIps -o tsv)
        echo "VM_IP=$VM_IP" >> $GITHUB_ENV
        echo "::set-output name=vm_ip::$VM_IP"

    - name: 🐳 Install Docker and Docker Compose on VM
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/quizapp_key $VM_USER@$VM_IP << 'EOF'
          sudo apt update
          sudo apt install -y docker.io docker-compose
          sudo usermod -aG docker $USER
        EOF

    - name: 📦 Copy App Files to Azure VM
      run: |
        rsync -avz -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/quizapp_key" \
          --exclude='venv' --exclude='.git' \
          ./ $VM_USER@$VM_IP:/home/$VM_USER/quizapp

    - name: 🚀 Deploy Docker Containers
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/quizapp_key $VM_USER@$VM_IP << 'EOF'
          cd /home/$VM_USER/quizapp
          docker compose -f docker-compose-deploy.yml down || true
          docker compose -f docker-compose-deploy.yml up -d --build
        EOF
